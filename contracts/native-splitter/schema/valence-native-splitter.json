{
  "contract_name": "valence-native-splitter",
  "contract_version": "0.1.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "op_mode_cfg",
      "splits"
    ],
    "properties": {
      "fallback_split": {
        "description": "a split for all denoms that are not covered in the regular `splits` list",
        "anyOf": [
          {
            "$ref": "#/definitions/SplitConfig"
          },
          {
            "type": "null"
          }
        ]
      },
      "op_mode_cfg": {
        "$ref": "#/definitions/ContractOperationModeConfig"
      },
      "splits": {
        "description": "maps denom to its split configuration",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/SplitConfig"
        }
      }
    },
    "additionalProperties": false,
    "definitions": {
      "ContractOperationModeConfig": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "permissionless"
            ]
          },
          {
            "type": "object",
            "required": [
              "permissioned"
            ],
            "properties": {
              "permissioned": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Decimal": {
        "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
        "type": "string"
      },
      "SplitConfig": {
        "type": "object",
        "required": [
          "receivers"
        ],
        "properties": {
          "receivers": {
            "description": "map receiver address to its share of the split",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/Decimal"
            }
          }
        },
        "additionalProperties": false
      }
    }
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "distribute_fallback"
        ],
        "properties": {
          "distribute_fallback": {
            "type": "object",
            "required": [
              "denoms"
            ],
            "properties": {
              "denoms": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Wakes the state machine up. The caller should check the sender of the tick is the clock if they'd like to pause when the clock does.",
        "type": "object",
        "required": [
          "tick"
        ],
        "properties": {
          "tick": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "denom_split"
        ],
        "properties": {
          "denom_split": {
            "type": "object",
            "required": [
              "denom"
            ],
            "properties": {
              "denom": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "splits"
        ],
        "properties": {
          "splits": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "fallback_split"
        ],
        "properties": {
          "fallback_split": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "operation_mode"
        ],
        "properties": {
          "operation_mode": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns the address a contract expects to receive funds to",
        "type": "object",
        "required": [
          "deposit_address"
        ],
        "properties": {
          "deposit_address": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "MigrateMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "update_config"
        ],
        "properties": {
          "update_config": {
            "type": "object",
            "properties": {
              "fallback_split": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/SplitConfig"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "op_mode": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/ContractOperationModeConfig"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "splits": {
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "$ref": "#/definitions/SplitConfig"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "update_code_id"
        ],
        "properties": {
          "update_code_id": {
            "type": "object",
            "properties": {
              "data": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Binary"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Binary": {
        "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
        "type": "string"
      },
      "ContractOperationModeConfig": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "permissionless"
            ]
          },
          {
            "type": "object",
            "required": [
              "permissioned"
            ],
            "properties": {
              "permissioned": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Decimal": {
        "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
        "type": "string"
      },
      "SplitConfig": {
        "type": "object",
        "required": [
          "receivers"
        ],
        "properties": {
          "receivers": {
            "description": "map receiver address to its share of the split",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/Decimal"
            }
          }
        },
        "additionalProperties": false
      }
    }
  },
  "sudo": null,
  "responses": {
    "denom_split": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SplitConfig",
      "type": "object",
      "required": [
        "receivers"
      ],
      "properties": {
        "receivers": {
          "description": "map receiver address to its share of the split",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Decimal"
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Decimal": {
          "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
          "type": "string"
        }
      }
    },
    "deposit_address": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Nullable_String",
      "type": [
        "string",
        "null"
      ]
    },
    "fallback_split": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SplitConfig",
      "type": "object",
      "required": [
        "receivers"
      ],
      "properties": {
        "receivers": {
          "description": "map receiver address to its share of the split",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Decimal"
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Decimal": {
          "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
          "type": "string"
        }
      }
    },
    "operation_mode": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ContractOperationMode",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "permissionless"
          ]
        },
        {
          "type": "object",
          "required": [
            "permissioned"
          ],
          "properties": {
            "permissioned": {
              "$ref": "#/definitions/PrivilegedAccounts"
            }
          },
          "additionalProperties": false
        }
      ],
      "definitions": {
        "Addr": {
          "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
          "type": "string"
        },
        "PrivilegedAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Addr"
          },
          "uniqueItems": true
        }
      }
    },
    "splits": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_Tuple_of_String_and_SplitConfig",
      "type": "array",
      "items": {
        "type": "array",
        "items": [
          {
            "type": "string"
          },
          {
            "$ref": "#/definitions/SplitConfig"
          }
        ],
        "maxItems": 2,
        "minItems": 2
      },
      "definitions": {
        "Decimal": {
          "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
          "type": "string"
        },
        "SplitConfig": {
          "type": "object",
          "required": [
            "receivers"
          ],
          "properties": {
            "receivers": {
              "description": "map receiver address to its share of the split",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "additionalProperties": false
        }
      }
    }
  }
}
